# e remap prefx from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Use r to quickly reload tmux settings
unbind r
bind r \
	source-file ~/.tmux.conf \;\
	display 'Reloaded tmux config'

# Start window and pane indices at 1.
set -g base-index 1
set -g pane-base-index 1

# Pane display
# set-option -g display-panes-active-colour colour5 #fg2
# set-option -g display-panes-colour colour1 #bg1
set -g pane-border-style fg=grey
set -g pane-active-border-style "bg=default fg=colour1"

# vi is good
setw -g mode-keys vi

# mouse behavior
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Have splits open in the current directory
bind s split-window -c '#{pane_current_path}'
bind v split-window -c '#{pane_current_path}' -h

# Faster escape sequences (default is 500ms).
# This helps when exiting insert mode in Vim: http://superuser.com/a/252717/65504
set -s escape-time 50

# set update frequency (default 15 seconds)
set -g status-interval 1

# window navigation
bind-key space next-window
bind-key bspace previous-window
set-option -g renumber-windows on

# pane layout
bind-key enter next-layout
bind-key C-o rotate-window
bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical


# Resizing splits
bind-key -n S-Left resize-pane -L 5
bind-key -n S-Right resize-pane -R 5


# use vim-like keys for splits and windows
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n 'C-\' if-shell "$is_vim" "send-keys 'C-\\'" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Setup 'v' to begin selection as in Vim
bind -Tcopy-mode-vi v send -X begin-selection
bind -Tcopy-mode-vi y send -X copy-pipe "reattach-to-user-namespace pbcopy"

# Copy to system clipboard (macOS)
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'pbcopy -in -selection clipboard'

# status bar
set-option -g status-style fg=yellow,bg="#2c2c2c" #fg yellow, bg base02
set -g message-style 'fg=cyan, bg=black'
set -g status-right-length 70
# dont have status-left
set -g status-left ''
set-option -g status-position top
set -g window-status-format "#{?window_activity_flag,#[bg=colour240],#[bg=#2c2c2c]}#[fg=colour248] #I #[fg=colour247,bold]#W "
set -g window-status-current-format "#[fg=colour9] #I #[fg=colour220,bold]#W "
set -g window-status-separator " "


# not sure what these are doing
bind-key : command-prompt
bind-key L clear-history
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80
set-option -g history-limit 250000
set-option -g repeat-time 0
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"
